#!/bin/env bash

SERVICE=$1
PARENT=$(ps -o command= -p "$PPID" | awk '{print $2}')
VALID_SERVICES=$(lxc list -c n -f csv | grep -v 'postgres\|proxy' | tr '\n' ' ')

# Help text for this script
function usage {
  echo "Set credential for munin or glowroot"
  echo 
  echo "usage: dhis2-set-credential <SERVICE>"
  echo "  Valid services are: ${VALID_SERVICES}"
  echo
}

# Check Service
if [[ $SERVICE == "" ]];
then
  usage
  exit 1
fi

SERVICES=$(lxc list -c n -f csv)
IS_VALID_SERVICE=$(echo ${SERVICES} | grep ${SERVICE})

if [[ $IS_VALID_SERVICE == "" ]];
then
  echo "[ERROR] Service ${SERVICE} not found!"
  echo "Valid services are: ${VALID_SERVICES}"
  exit 1
else
  echo "[INFO] Service ${SERVICE} found"
  echo "SET ${SERVICE} CREDENTIALS"
  echo "=============================="
  echo "Do you want to add the password manually for the user admin in the service ${SERVICE}? (If not, password will be generated randomly)"
  select yn in "Yes" "No"; do
    case $yn in
      Yes )
        echo
        echo "Please insert a password:"
        read PASSWD
        break;;
      No )
        PASSWD=$(openssl rand -hex 12)
        break;;
    esac
  done

  if [[ $SERVICE == "monitor" ]];
  then
    htpasswd -b -c /tmp/.htpasswd admin ${PASSWD}
    lxc file push /tmp/.htpasswd monitor/etc/munin/.htpasswd
    lxc exec monitor -- chmod 644 /etc/munin/.htpasswd
    lxc exec monitor -- service apache2 restart
    rm /tmp/.htpasswd
    echo "Credentials have been set"
    echo "========================="
    echo "Service: monitor (munin)"
    echo "Username: admin"
    echo "Password: ${PASSWD}"
  else
    # Check if user wants to set credential
    if [[ $PARENT == "" ]];
    then
      echo "Instance ${SERVICE} will be restarted. Are you sure do you want to continue?"
      select yn in "Yes" "No"; do
        case $yn in
          Yes )
            break;;
          No )
            echo 
            echo "Password has not been set"
            exit 1;;
        esac
      done
    fi

    #Hash glowroot password
    lxc exec $SERVICE -- wget -P /tmp https://github.com/glowroot/glowroot/releases/download/v0.13.6/glowroot-central-0.13.6-dist.zip
    lxc exec $SERVICE -- unzip -q -o /tmp/glowroot-central-0.13.6-dist.zip -d /tmp
    GLOWROOT_PASSWD_ENC=$(lxc exec $SERVICE -- java -jar /tmp/glowroot-central/glowroot-central.jar hash-password $PASSWD)
    lxc file pull $SERVICE/opt/glowroot/admin.json /tmp/admin.json
    jq --arg context /${SERVICE}-glowroot '.web.contextPath=$context' /tmp/admin.json > /tmp/admin.json.tmp
    jq --arg passwordHash $GLOWROOT_PASSWD_ENC '.users |= map(if .username=="admin" then .passwordHash=$passwordHash else . end)' /tmp/admin.json.tmp > /tmp/admin.json
    lxc file push /tmp/admin.json $SERVICE/opt/glowroot/admin.json
    lxc exec $SERVICE -- chown -R tomcat.tomcat /opt/
    lxc exec $SERVICE -- rm -rf /tmp/glowroot-central*
    rm -rf /tmp/admin.json*

    if [[ $PARENT == "" ]];
    then
      lxc exec $SERVICE -- service tomcat9 restart
    fi
    echo "Credentials have been set:"
    echo "========================="
    echo "Instance: ${SERVICE}"
    echo "Service: ${SERVICE}-glowroot"
    echo "Username: admin"
    echo "Password: ${PASSWD}"
  fi
fi

