#!/usr/bin/env bash
#       ____  __  ______________
#      / __ \/ / / /  _/ ___/__ \
#     / / / / /_/ // / \__ \__/ /
#    / /_/ / __  // / ___/ / __/
#   /_____/_/ /_/___//____/____/
#
#   Script to deploy a dhis2 instance

PROG=`basename $0`
CREATEDB=true
TOMCAT_SETUP=/usr/local/etc/dhis/tomcat_setup

###############################################################
usage() {
  echo "Usage: $PROG [options] <instance> <ip> <postgres_container>"
  echo "  instance: name of the dhis2 instance to create"
  echo "Options:"
  echo "  -h, --help       Display this help message"
  echo "  -n               Do NOT create database for instance"
}

# main entry point
echo checking options
while getopts p:nh opt
do
  case $opt in
    n) CREATEDB=false ;;
    h) usage;;
    *) echo "Error: Unknown parameter '$OPTARG'."
        exit 1;;
  esac
done

shift $(($OPTIND - 1))

if [ "$#" -lt 3 ]; then
  usage
  exit 1
fi

NAME=$1
IP=$2
PG=$3

# convert IP to regex
IPREGEX=$(echo $IP |sed "s/\./\\\./g")

if [[ $(lxc list -c n --format csv $NAME) ]];
then 
  echo Container $1 already exists;
  exit 1	
fi

if [[ $(lxc list -c 4 |grep $IPREGEX) ]];
then
  echo "$IP already in use"
  exit 1
fi

if [ ! $(lxc list -c n --format csv $PG) ];
then
  echo No such container $PG;
  exit 1
fi


echo "Creating tomcat container $NAME"

lxc init ubuntu: $NAME

# set ip addresses
sudo lxc network attach lxdbr0 $NAME eth0 eth0
sudo lxc config device set $NAME eth0 ipv4.address $IP

# lxc config set $NAME boot.autostart false
lxc config set $NAME user.type "Tomcat server"
lxc start $NAME 

# wait for network to come up
ping -c 3 $IP

cat $TOMCAT_SETUP | lxc exec $NAME -- bash

# Append to bottom /etc/hosts
sudo sed -i "/$IP/d" /etc/hosts
sudo sed -i "$ a\
	$IP $NAME" /etc/hosts

if $CREATEDB; then
	PASSWD=$(openssl rand -hex 20)

	lxc exec $PG -- createuser $NAME
	lxc exec $PG -- psql -c "ALTER user $NAME with PASSWORD '$PASSWD'" postgres 
	lxc exec $PG -- createdb -O $NAME $NAME
        lxc exec $PG -- psql -c "CREATE EXTENSION postgis" $NAME

	lxc exec $NAME -- sed -i "s/^connection.username.*$/connection.username = $NAME/" /opt/dhis2/dhis.conf
	lxc exec $NAME -- sed -i "s/^connection.password.*$/connection.password = $PASSWD/" /opt/dhis2/dhis.conf
	lxc exec $NAME -- sed -i "s/^connection.url.*$/connection.url = jdbc:postgresql:\/\/$PG\/$NAME/" /opt/dhis2/dhis.conf

	# Fixing pg_hba.conf permissions
        # get rid of any existing lines for the IP
        lxc exec $PG -- sed -i "/$IPREGEX/d" /etc/postgresql/10/main/pg_hba.conf
        lxc exec $PG -- sed -i "$ a\
	  host $NAME $NAME $IP/32 md5" /etc/postgresql/10/main/pg_hba.conf
	lxc exec $PG -- service postgresql reload
	# add firewall rule
	lxc exec $PG ufw allow proto tcp from $IP to any port 5432
fi
hosts="$host";
remote_addr="$remote_addr";
proxy_add_x_forwarded_for="$proxy_add_x_forwarded_for";
#if proxy is nginx ;
if [[ $(lxc exec proxy -- ls /etc/ |grep "nginx") ]];
then
  cat <<EOF > /tmp/${NAME}
  # Proxy pass to servlet container

    location /${NAME} {
    proxy_pass                http://${IP}:8080/${NAME};
    proxy_redirect            off;
    proxy_set_header Host \$host;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  http;
    }
EOF
lxc file push /tmp/${NAME} proxy/etc/nginx/upstream/${NAME}
rm /tmp/${NAME}
lxc exec proxy -- service nginx restart
exit 1
else
# if proxy is apache2; then ....
cat <<EOF > /tmp/${NAME}
<Location /${NAME}>
  Require all granted
  ProxyPass "http://${IP}:8080/${NAME}"
  ProxyPassReverse "http://${IP}:8080/${NAME}"
</Location>
EOF

lxc file push /tmp/${NAME} proxy/etc/apache2/upstream/${NAME}
rm /tmp/${NAME}
lxc exec proxy -- service apache2 restart
  exit 1
fi
   





