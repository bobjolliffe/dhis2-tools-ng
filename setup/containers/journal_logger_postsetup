LOGS_DIR=$(echo $CONTAINER | jq -r .directory)
LOGS_BACKEND=$(echo $CONTAINER | jq -r .storage)

S3_STORAGE_CLASS="STANDARD_IA"
CONTAINER_LOGS_DIR="/var/log/journal/remote"

POOL_NAME="logs"
VOLUME_NAME="logs"

# Containers setup
for CONTAINER in $CONTAINERS; do
  container_name=$(echo $CONTAINER | jq -r .name)
  container_type=$(echo $CONTAINER | jq -r .type)

  # Skip configuration for logger and SIEM
  if ! [[ "$container_type" =~ "siem" ]] && ! [[ "$container_type" =~ "logger" ]]; then
    journal_remote_installed=$(lxc exec $container_name -- dpkg -l | grep -w systemd-journal-remote)
    if [ "$journal_remote_installed" ]; then
      echo "[WARN] $container_name has already journal-remote installed. Skipped"
      continue
    fi

    echo -n "[INFO] Configuring remote logging for $container_name.."
    if [[ "$container_type" == "nginx_proxy" ]]; then
      echo "nginx detected."
      lxc exec $container_name -- sed -i '/error_log/s/.*/error_log syslog:server=unix:\/dev\/log info;/' /etc/nginx/nginx.conf
      lxc exec $container_name -- sed -i '/http {/a  access_log   syslog:server=unix:\/dev\/log;' /etc/nginx/nginx.conf
      lxc exec $container_name -- service nginx restart
    elif [[ "$container_type" == "apache_proxy" ]]; then
      echo "apache2 detected."
      lxc exec $container_name -- sed -i '/ErrorLog/s/.*/ErrorLog syslog/' /etc/apache2/sites-enabled/000-default.conf
      lxc exec $container_name -- sed -i '/CustomLog/s/.*/CustomLog \"| \/usr\/bin\/logger -t apache2 -p user.info\" combined/' /etc/apache2/sites-enabled/000-default.conf
      lxc exec $container_name -- service apache2 restart
    elif [[ "$container_type" == "postgres" ]]; then
      echo "postgres detected."
      lxc exec $container_name -- sh -c "echo \"log_destination = 'syslog'\" >> /etc/postgresql/13/main/postgresql.conf"
      lxc exec $container_name -- service postgresql restart
    fi

    lxc exec $container_name -- apt install -y systemd-journal-remote
    lxc exec $container_name -- sh -c "echo URL=http://$IP:19532 >> /etc/systemd/journal-upload.conf"
    lxc exec $container_name -- adduser --system --home /run/systemd --no-create-home --disabled-login --group systemd-journal-upload
    # lxc exec $container_name -- chown systemd-journal-upload /var/lib/private/systemd/
    lxc exec $container_name -- sed -i -e 's/DynamicUser\=yes/DynamicUser\=no/' /lib/systemd/system/systemd-journal-upload.service
    lxc exec $container_name -- systemctl daemon-reload
    lxc exec $container_name -- systemctl enable --now systemd-journal-upload.service
  fi
done

if [[ $LOGS_BACKEND == fs ]]; then

  if ! [ -d "$LOGS_DIR" ]; then
    echo "Directory $LOGS_DIR not a directory or not present on host. Quitting"
    exit 1
  fi

  echo -n "Creating storage pool $POOL_NAME..."
  storage_pool_exist=$(lxc storage list | grep $POOL_NAME)
  if ! [ "$storage_pool_exist" ]; then
    lxc storage create $POOL_NAME dir source=$LOGS_DIR
    echo "created"
  else
    echo "already exist, skipping"
  fi

  echo -n "Creating storage volume $VOLUME_NAME..."
  volume_exist=$(lxc storage volume list $POOL_NAME | grep -w $VOLUME_NAME)
  if ! [ "$volume_exist" ]; then
    lxc storage volume create $POOL_NAME $VOLUME_NAME
    echo "created"
  else
    echo "already exist, skipping"
  fi

  lxc exec $NAME -- service systemd-journal-remote stop
  lxc storage volume attach $POOL_NAME $VOLUME_NAME $NAME $CONTAINER_LOGS_DIR
  lxc exec $NAME -- service systemd-journal-remote start

  #lxc exec $NAME -- sed -e "s/journal\/remote/${CONTAINER_LOGS_DIR//\//\\/}/g" /lib/systemd/system/systemd-journal-remote.service
elif [[ $LOGS_BACKEND == s3 ]]; then
  lxc exec $NAME -- apt install awscli -y
  # configure awscli with profile
  lxc exec $NAME -- crontab -l ; echo "0 * * * * s3 cp --quiet --sse --storage-class ${S3_STORAGE_CLASS} ${CONTAINER_LOGS_DIR} s3://${LOGS_DIR}" | sort - | uniq - | crontab -
fi
